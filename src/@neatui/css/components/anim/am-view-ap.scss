// 显示动画
@keyframes am-show-ap {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0) scale3d(1, 1, 1);
  }
  70% {
    opacity: 1;
    transform: translate3d(0, 0%, 0) scale3d(1, 1.05, 1);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0%, 0) scale3d(1, 1, 1);
  }
}

// 隐藏动画
@keyframes am-hide-ap {
  0% {
    opacity: 1;
    transform: translate3d(0, 0%, 0) scale3d(1, 1, 1);
  }
  35%,
  40% {
    opacity: 1;
    transform: translate3d(0, 0%, 0) scale3d(1, 1.05, 1);
  }
  100% {
    opacity: 0;
    transform: translate3d(0, 100%, 0) scale3d(1, 1, 1);
  }
}

// 引用显示
%am-show-ap {
  transform: translate3d(0, 100%, 0) scale3d(1, 1, 1);
  opacity: 0;
  transform-origin: 50% 100%;
  transform-style: preserve-3d;
}

// 引用隐藏
%am-hide-ap {
  transform: translate3d(0, 0%, 0) scale3d(1, 1, 1);
  opacity: 0;
  transform-origin: 50% 100%;
  transform-style: preserve-3d;
}

// 传参调用
@mixin am-view-ap($time: 450ms, $delay: 100ms) {
  &.show,
  &[view='2'] {
    & > * {
      @extend %am-show-ap;
      animation: am-show-ap $time $delay both;
    }
  }

  &.hide,
  &[view='1'] {
    opacity: 0;
    transition: ($time + $delay) * (4 * 0.1) ($time + $delay) * (6 * 0.1);
    pointer-events: none;

    & > * {
      @extend %am-hide-ap;
      animation: am-hide-ap $time $delay both;
    }
  }

  &.none,
  &[view='0'] {
    display: none;
  }
}

// 动画时间
$time: 450ms;
$delay: 100ms;

// 全套引用
[am-view='ap'] {
  &.show,
  &[view='2'] {
    & > * {
      @extend %am-show-ap;
      animation: am-show-ap $time $delay both;
    }
  }

  &.hide,
  &[view='1'] {
    opacity: 0;
    transition: ($time + $delay) * (4 * 0.1) ($time + $delay) * (6 * 0.1);
    pointer-events: none;

    & > * {
      @extend %am-hide-ap;
      animation: am-hide-ap $time $delay both;
    }
  }

  &.none,
  &[view='0'] {
    display: none;
  }
}
