<template>
  <div :am-view="view" :am-mode="mode" class="route-view pr full bg-back" :view-full="full ? 1 : 0" @animationend="anim">
    <div class="full" am-view-item="list">
      <slot name="list" :mode="mode"></slot>
    </div>
    <div v-if="mode === 'default'" class="full" am-view-item="item">
      <slot name="item" :mode="mode"></slot>
    </div>
    <div v-if="mode === 'preview'" class="full" am-view-item="side" ref="SideRef">
      <slot name="side" :mode="mode"></slot>
    </div>
  </div>
</template>
<script setup lang="ts">
  import { onMounted, ref, watch } from 'vue';
  import { useRoute, useRouter } from 'vue-router';

  interface Props {
    full?: boolean | 0 | 1;
    once?: number;
    mode?: 'default' | 'preview' | 'window';
    queryName?: string;
  }
  const props: any = withDefaults(defineProps<Props>(), {
    full: 0,
    once: 0,
    mode: 'default',
    queryName: 'id'
  });

  const route = useRoute();
  const router = useRouter();
  const init = ref(0);
  const view = ref('');
  const anim = (e: any) => {
    if (e.animationName === 'am-hide') {
      view.value = route.query[props.queryName] ? 'item' : 'list';
    }
  };

  const a = () => {
    if (init.value) {
      if (!props.once) {
        view.value = route.query[props.queryName] ? 'iteming' : 'listing';
      }
    } else {
      view.value = route.query[props.queryName] ? 'item' : 'list';
      init.value = 1;
    }
  };

  watch(() => route.query[props.queryName], a);
  a();

  const SideRef: any = ref(null);
  // 取消
  const cancel = ({ target }: any = {}) => {
    const ifollow: any = document.querySelector('#ifollow');
    const toasts: any = document.querySelectorAll('.mc-toast');
    if (SideRef.value && !SideRef.value.contains(target) && !ifollow?.contains(target) && Array.from(toasts).every((t: any) => !t.contains(target))) {
      const _query = { ...route.query };
      delete _query[props.queryName];
      router.push({ path: route.path, query: _query });
    }
  };
  onMounted(() => {
    document.addEventListener('click', cancel, true);
  });
</script>

<style lang="scss">
  // 默认模式
  [am-view][am-mode~='default'] {
    overflow: hidden;

    @keyframes am-show {
      0% {
        opacity: 0;
        transform: translate3d(2em, 0, 0);
      }
      100% {
        opacity: 1;
        transform: translate3d(0, 0, 0);
      }
    }
    @keyframes am-hide {
      0% {
        opacity: 1;
        transform: translate3d(0, 0, 0);
      }
      100% {
        opacity: 0;
        transform: translate3d(2em, 0, 0);
      }
    }

    &[view-full~='1'] {
      position: fixed;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
      z-index: 15;
    }

    [am-view-item] {
      display: none;

      &[am-view-item~='row'] {
        flex-direction: row !important;
      }
    }
    &[am-view='list'] {
      [am-view-item~='list'] {
        flex-direction: column;
        display: flex;
        animation: am-show 0.35s ease both;
      }
    }
    &[am-view='listing'] {
      [am-view-item~='item'] {
        flex-direction: column;
        display: flex;
        animation: am-hide 0.3s ease-in-out both;
      }
    }
    &[am-view='item'] {
      [am-view-item~='item'] {
        display: flex;
        animation: am-show 0.35s ease both;
      }
    }
    &[am-view='iteming'] {
      [am-view-item~='list'] {
        display: flex;
        animation: am-hide 0.3s ease-in-out both;
      }
    }
  }

  // 默认模式
  [am-view][am-mode~='preview'] {
    overflow: hidden;

    &[view-full~='1'] {
      position: fixed;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
      z-index: 15;
    }

    [am-view-item] {
      &[am-view-item~='row'] {
        flex-direction: row !important;
      }

      &[am-view-item~='list'] {
        display: flex;
      }
      &[am-view-item~='side'] {
        position: absolute;
        top: 0;
        right: 0;
        z-index: 10;
        display: flex;
        justify-content: flex-end;
        align-items: stretch;
        align-content: space-between;
        pointer-events: none;
        & > * {
          pointer-events: auto;
        }
        transition: all 0.5s;
      }
    }
    &[am-view='list'],
    &[am-view='listing'] {
      [am-view-item~='side'] {
        display: flex;
        opacity: 0;
        transform: translate3d(110%, 0, 0);
      }
    }
    &[am-view='item'],
    &[am-view='iteming'] {
      [am-view-item~='side'] {
        display: flex;
        opacity: 1;
        transform: translate3d(0, 0, 0);
      }
    }
  }

  // 开新窗口

  // 弹出窗口
  [am-view][am-mode~='pop-up'] {
    overflow: hidden;

    &[view-full~='1'] {
      position: fixed;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
      z-index: 15;
    }

    [am-view-item] {
      &[am-view-item~='row'] {
        flex-direction: row !important;
      }

      &[am-view-item~='list'] {
        display: flex;
      }
      &[am-view-item~='side'] {
        position: absolute;
        top: 0;
        right: 0;
        z-index: 10;
        display: flex;
        justify-content: flex-end;
        align-items: stretch;
        align-content: space-between;
        pointer-events: none;
        & > * {
          pointer-events: auto;
        }
        transition: all 0.5s;
      }
    }
    &[am-view='list'],
    &[am-view='listing'] {
      [am-view-item~='side'] {
        display: flex;
        opacity: 0;
        transform: translate3d(110%, 0, 0);
      }
    }
    &[am-view='item'],
    &[am-view='iteming'] {
      [am-view-item~='side'] {
        display: flex;
        opacity: 1;
        transform: translate3d(0, 0, 0);
      }
    }
  }
</style>
